{"version":3,"sources":["data/dwarves.js","components/LabelValueDisplay.js","components/Randomizer.js","components/Setup.js","nav/AppTabs.js","nav/github.svg","nav/Nav.js","App.js","index.js","serviceWorker.js"],"names":["dwarves","name","color","primaries","overclocks","secondaries","grenades","useStyles","makeStyles","subheading","marginTop","width","LabelValueDisplay","className","label","value","dense","valueStyle","classes","containerClass","Typography","variant","component","style","balancedTeam","players","pickOne","arr","pluck","max","length","index","Math","floor","random","item","splice","card","margin","maxWidth","content","marginBottom","divider","row","display","flexDirection","Randomizer","useState","data","setData","handleClear","useCallback","handleRandomize","dwarfClone","randomized","map","player","dwarf","primary","secondary","grenade","Card","CardHeader","title","CardContent","Fragment","Divider","CardActions","IconButton","onClick","Setup","theme","appBar","backgroundColor","palette","background","paper","tab","minWidth","invisible","AppTabs","setTab","AppBar","position","elevation","Tabs","onChange","_","newValue","Tab","drawerPaper","toolbar","paddingLeft","paddingRight","flex","nested","spacing","link","textDecoration","Nav","Toolbar","Tooltip","target","href","alt","height","src","githubSvg","createMuiTheme","type","App","Component","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0WAwOeA,EAxOC,CACZ,CACIC,KAAM,UACNC,MAAO,UACPC,UAAW,CACP,CACIF,KAAM,qBACNG,WAAY,CACR,gBACA,kBACA,sBACA,uBACA,cACA,gBAGR,CACIH,KAAM,cACNG,WAAY,CACR,8BACA,yBACA,sBACA,YACA,YACA,cAIZC,YAAa,CACT,CACIJ,KAAM,aACNG,WAAY,CACR,YACA,kBACA,qBACA,iBACA,mBACA,wBAGR,CACIH,KAAM,8BACNG,WAAY,CACR,mBACA,wBACA,YACA,eACA,cACA,uBAIZE,SAAU,CACN,aACA,aACA,uBAGR,CACIL,KAAM,WACNC,MAAO,UACPC,UAAW,CACP,CACIF,KAAM,qBACNG,WAAY,CACR,UACA,yBACA,4BACA,iBACA,gBAGR,CACIH,KAAM,uBACNG,WAAY,CACR,oBACA,qBACA,oBACA,sBACA,aACA,yBAIZC,YAAa,CACT,CACIJ,KAAM,oBACNG,WAAY,CACR,cACA,WACA,iBACA,iBACA,UACA,qBAGR,CACIH,KAAM,gBACNG,WAAY,CACR,qBACA,eACA,0BACA,mBACA,yBACA,iBACA,aAIZE,SAAU,CACN,WACA,iBACA,mBAGR,CACIL,KAAM,SACNC,MAAO,UACPC,UAAW,CACP,CACIF,KAAM,+BACNG,WAAY,CACR,uBACA,qBACA,eACA,yBACA,oBACA,cACA,eAGR,CACIH,KAAM,iCACNG,WAAY,CACR,kBACA,qBACA,gBACA,kBACA,aACA,wBAIZC,YAAa,CACT,CACIJ,KAAM,2BACNG,WAAY,CACR,kBACA,YACA,mBACA,cACA,kBACA,kBAGR,CACIH,KAAM,sBACNG,WAAY,CACR,oBACA,oBACA,eACA,sBACA,mBACA,mBACA,gBAIZE,SAAU,CACN,iBACA,qBACA,oBAGR,CACIL,KAAM,QACNC,MAAO,UACPC,UAAW,CACP,CACIF,KAAM,eACNG,WAAY,CACR,eACA,gBACA,kBACA,+BACA,mBACA,sBACA,wBAGR,CACIH,KAAM,gBACNG,WAAY,CACR,aACA,gBACA,0BACA,UACA,4BACA,0BAIZC,YAAa,CACT,CACIJ,KAAM,wBAC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","file":"static/js/main.b3a265f2.chunk.js","sourcesContent":["const dwarves = [\n    {\n        name: 'Driller',\n        color: '#dfda3a',\n        primaries: [\n            {\n                name: 'CRSPR Flamethrower',\n                overclocks: [\n                    'Lighter Tanks',\n                    'Sticky Additive',\n                    'Compact Feed Valves',\n                    'Fuel Stream Diffuser',\n                    'Face Melter',\n                    'Sticky Fuel'\n                ]\n            },\n            {\n                name: 'Cryo Cannon',\n                overclocks: [\n                    'Improved Thermal Efficiency',\n                    'Perfectly Tuned Cooler',\n                    'Flow Rate Expansion',\n                    'Ice Spear',\n                    'Ice Storm',\n                    'Snowball'\n                ]\n            }\n        ],\n        secondaries: [\n            {\n                name: 'Subata 120',\n                overclocks: [\n                    'Chain Hit',\n                    'Homebrew Powder',\n                    'Oversized Magazine',\n                    'Automatic Fire',\n                    'Explosive Reload',\n                    'Tranquilizer Rounds'\n                ]\n            },\n            {\n                name: 'Experimental Plasma Charger',\n                overclocks: [\n                    'Energy Rerouting',\n                    'Magnetic Cooling Unit',\n                    'Heat Pipe',\n                    'Heavy Hitter',\n                    'Overcharger',\n                    'Persistent Plasma'\n                ]\n            }\n        ],\n        grenades: [\n            'Impact Axe',\n            'HE Grenade',\n            'Neurotoxin Grenade'\n        ]\n    },\n    {\n        name: 'Engineer',\n        color: '#Fb1a17',\n        primaries: [\n            {\n                name: '\"Warthog\" Auto 210',\n                overclocks: [\n                    'Stunner',\n                    'Light-Weight Magazines',\n                    'Magnetic Pellet Alignment',\n                    'Cycle Overload',\n                    'Mini Shells'\n                ]\n            },\n            {\n                name: '\"Stubby\" Voltaic SMG',\n                overclocks: [\n                    'Super-Slim Rounds',\n                    'Well Oiled Machine',\n                    'EM Refire Booster',\n                    'Light-Weight Rounds',\n                    'Turret Arc',\n                    'Turret EM Discharge'\n                ]\n            }\n        ],\n        secondaries: [\n            {\n                name: 'Deepcore 40mm PGL',\n                overclocks: [\n                    'Clean Sweep',\n                    'Pack Rat',\n                    'Compact Rounds',\n                    'RJ250 Compound',\n                    'Fat Boy',\n                    'Hyper Propellant'\n                ]\n            },\n            {\n                name: 'Breach Cutter',\n                overclocks: [\n                    'Light-Weight Cases',\n                    'Roll Control',\n                    'Stronger Plasma Current',\n                    'Return to Sender',\n                    'High Voltage Crossover',\n                    'Spinning Death',\n                    'Inferno'\n                ]\n            }\n        ],\n        grenades: [\n            'L.U.R.E.',\n            'Plasma Burster',\n            'Proximity Mine'\n        ]\n    },\n    {\n        name: 'Gunner',\n        color: '#3a6b33',\n        primaries: [\n            {\n                name: '\"Lead Storm\" Powered Minigun',\n                overclocks: [\n                    'A Little More Oomph!',\n                    'Thinned Drum Walls',\n                    'Burning Hell',\n                    'Compact Feed Mechanism',\n                    'Exhaust Vectoring',\n                    'Bullet Hell',\n                    'Lead Storm'\n                ]\n            },\n            {\n                name: '\"Thunderhead\" Heavy Autocannon',\n                overclocks: [\n                    'Composite Drums',\n                    'Splintering Shells',\n                    'Carpet Bomber',\n                    'Combat Mobility',\n                    'Big Bertha',\n                    'Neurotoxin Payload'\n                ]\n            }\n        ],\n        secondaries: [\n            {\n                name: '\"Bulldog\" Heavy Revolver',\n                overclocks: [\n                    'Homebrew Powder',\n                    'Chain Hit',\n                    'Volatile Bullets',\n                    'Six Shooter',\n                    'Elephant Rounds',\n                    'Magic Bullets'\n                ]\n            },\n            {\n                name: 'BRT7 Burst Fire Gun',\n                overclocks: [\n                    'Composite Casings',\n                    'Full Chamber Seal',\n                    'Compact Mags',\n                    'Experimental Rounds',\n                    'Electro Minelets',\n                    'Micro Flechettes',\n                    'Lead Spray'\n                ]\n            }\n        ],\n        grenades: [\n            'Sticky Grenade',\n            'Incendiary Grenade',\n            'Cluster Grenade'\n        ]\n    },\n    {\n        name: 'Scout',\n        color: '#235bf4',\n        primaries: [\n            {\n                name: 'Deepcore GK2',\n                overclocks: [\n                    'Compact Ammo',\n                    'Gas Rerouting',\n                    'Homebrew Powder',\n                    'Overclocked Firing Mechanism',\n                    'Bullets of Mercy',\n                    'AI Stability Engine',\n                    'Electrifying Reload'\n                ]\n            },\n            {\n                name: 'M1000 Classic',\n                overclocks: [\n                    'Hoverclock',\n                    'Minimal Clips',\n                    'Active Stability System',\n                    'Hipster',\n                    'Electrocuting Focus Shots',\n                    'Supercooling Chamber'\n                ]\n            }\n        ],\n        secondaries: [\n            {\n                name: 'Jury-Rigged Boomstick',\n                overclocks: [\n                    'Compact Shells',\n                    'Double Barrel',\n                    'Special Powder',\n                    'Stuffed Shells',\n                    'Shaped Shells',\n                    'Jumbo Shells'\n                ]\n            },\n            {\n                name: 'Zhukov NUK17',\n                overclocks: [\n                    'Minimal Magazines',\n                    'Custom Casings',\n                    'Cryo Minelets',\n                    'Embedded Detonators',\n                    'Gas Recycling'\n                ]\n            }\n        ],\n        grenades: [\n            'IFG',\n            'Cryo Grenade',\n            'Pherimone Canister'\n        ]\n    }\n]\nexport default dwarves\n","import {makeStyles} from '@material-ui/styles'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nfunction LabelValueDisplay({className, label, value, dense, valueStyle}) {\n    const classes = useStyles()\n    const containerClass = (className || '') + (dense ? '' : ' ' + classes.subheading)\n    return (\n        <div className={containerClass}>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"div\">\n                {label}\n            </Typography>\n            <Typography variant=\"body2\" component=\"div\" style={valueStyle}>\n                {value}\n            </Typography>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    subheading: {\n        marginTop: 16,\n        width: '100%'\n    }\n})\n\nexport default LabelValueDisplay\n","import {Divider} from '@material-ui/core'\nimport React, {useCallback, useState} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport makeStyles from '@material-ui/styles/makeStyles'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport ShuffleIcon from '@material-ui/icons/ShuffleOutlined'\nimport ClearAllIcon from '@material-ui/icons/ClearAll'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport dwarves from '../data/dwarves'\nimport LabelValueDisplay from './LabelValueDisplay'\n\nfunction Randomizer() {\n    const classes = useStyles()\n    const [data, setData] = useState(null)\n\n    const handleClear = useCallback(() => {\n        setData(null)\n    }, [])\n\n    const handleRandomize = useCallback(() => {\n        const dwarfClone = [...dwarves]\n        const randomized = players.map(player => {\n            const dwarf = pickOne(dwarfClone, balancedTeam)\n            return {\n                name: player,\n                color: dwarf.color,\n                dwarf: dwarf.name,\n                primary: pickOne(dwarf.primaries).name,\n                secondary: pickOne(dwarf.secondaries).name,\n                grenade: pickOne(dwarf.grenades)\n            }\n        })\n        setData(randomized)\n    }, [])\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title='Randomizer'/>\n            <CardContent className={classes.content}>\n                {!data && <Typography>Click Randomize to begin.</Typography>}\n                {\n                    data &&\n                    data.map((player, index) =>\n                        <React.Fragment key={index}>\n                            <div className={classes.row}>\n                                <LabelValueDisplay label='Player' value={player.name}/>\n                                <LabelValueDisplay label='Dwarf' value={player.dwarf} valueStyle={{color: player.color}}/>\n                            </div>\n                            <div className={classes.row}>\n                                <LabelValueDisplay label='Primary' value={player.primary}/>\n                                <LabelValueDisplay label='Secondary' value={player.secondary}/>\n                            </div>\n                            <div className={classes.row}>\n                                <LabelValueDisplay label='Grenade' value={player.grenade}/>\n                            </div>\n                            {index < players.length - 1 && <Divider className={classes.divider}/>}\n                        </React.Fragment>\n                    )\n                }\n            </CardContent>\n            <CardActions>\n                <IconButton color='secondary' onClick={handleClear}>\n                    <ClearAllIcon/>\n                </IconButton>\n                <IconButton color='secondary' onClick={handleRandomize}>\n                    <ShuffleIcon/>\n                </IconButton>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst balancedTeam = true\nconst players = ['One', 'Two', 'Three', 'Four']\nconst pickOne = (arr, pluck) => {\n    const max = arr.length\n    const index = Math.floor((Math.random() * max) % max)\n    const item = arr[index]\n    if (pluck) arr.splice(index, 1)\n    return item\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 400\n    },\n    content: {\n        marginTop: -16,\n        marginBottom: -16\n    },\n    divider: {\n        margin: '16px -16px 8px -16px'\n    },\n    row: {\n        display: 'flex',\n        flexDirection: 'row'\n    }\n})\n\nexport default Randomizer\n","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport makeStyles from '@material-ui/styles/makeStyles'\nimport CardContent from '@material-ui/core/CardContent'\nimport LabelValueDisplay from './LabelValueDisplay'\n\nfunction Setup() {\n    const classes = useStyles()\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title='Setup'/>\n            <CardContent>\n                <LabelValueDisplay label='Players' value='todo'/>\n                <LabelValueDisplay label='Guns' value='todo'/>\n                <LabelValueDisplay label='Grenades' value='todo'/>\n                <LabelValueDisplay label='Overclocks' value='todo'/>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 400\n    }\n})\n\nexport default Setup\n","import React, {useState} from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport AppBar from '@material-ui/core/AppBar'\nimport Randomizer from '../components/Randomizer'\nimport Setup from '../components/Setup'\nimport makeStyles from '@material-ui/styles/makeStyles'\n\nfunction AppTabs() {\n    const classes = useStyles()\n    const [tab, setTab] = useState(0)\n    const handleTabChange = (_, newValue) => setTab(newValue)\n\n    return (\n        <React.Fragment>\n            <AppBar position='static' elevation={0} className={classes.appBar}>\n                <Tabs\n                    value={tab}\n                    onChange={handleTabChange}\n                >\n                    <Tab label='Randomizer' className={classes.tab}/>\n                    <Tab label='Setup' className={classes.tab}/>\n                </Tabs>\n            </AppBar>\n            <div className={tab !== 0 ? classes.invisible : ''}>\n                <Randomizer/>\n            </div>\n            <div className={tab !== 1 ? classes.invisible : ''}>\n                <Setup/>\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        backgroundColor: theme.palette.background.paper\n    },\n    tab: {\n        backgroundColor: theme.palette.background.paper,\n        minWidth: 125\n    },\n    invisible: {\n        display: 'none'\n    }\n}))\n\nexport default AppTabs\n","export default __webpack_public_path__ + \"static/media/github.abfa92f7.svg\";","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport githubSvg from './github.svg'\nimport makeStyles from '@material-ui/styles/makeStyles'\n\nfunction Nav() {\n    const classes = useStyles()\n    return (\n        <React.Fragment>\n            <AppBar position='static' elevation={0} className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    {/* Title bar */}\n                    <Typography variant='h6' className={classes.title}>\n                        Deep Random Galactic\n                    </Typography>\n\n                    {/* Top right icons */}\n                    <Tooltip title='Contribute on GitHub!'>\n                        <IconButton target='_blank' href='https://github.com/NiXXeD/deeprandomgalactic'>\n                            <img alt='github link' width='24' height='24' src={githubSvg}/>\n                        </IconButton>\n                    </Tooltip>\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        backgroundColor: theme.palette.background.paper\n    },\n    drawerPaper: {\n        width: 225\n    },\n    toolbar: {\n        paddingLeft: 8,\n        paddingRight: 8\n    },\n    title: {\n        paddingLeft: 12,\n        flex: 1\n    },\n    nested: {\n        paddingLeft: theme.spacing(4)\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit'\n    }\n}))\n\nexport default Nav\n","import React from 'react'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\nimport ThemeProvider from '@material-ui/styles/ThemeProvider'\nimport AppTabs from './nav/AppTabs'\nimport Nav from './nav/Nav'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark'\n    }\n})\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <div>\n                <Nav/>\n\n                <AppTabs/>\n            </div>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\nfunction render(Component) {\n    ReactDOM.render(<Component/>, document.getElementById('root'))\n}\n\nrender(App)\n\nif (module.hot) {\n    module.hot.accept('./App', () => {\n        const next = require('./App').default\n        render(next)\n    })\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready\n                    .then(() => {\n                        console.log(\n                            'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                        )\n                    })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister()\n                        .then(() => {\n                            window.location.reload()\n                        })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => registration.unregister())\n    }\n}\n"],"sourceRoot":""}