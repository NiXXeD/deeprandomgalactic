{"version":3,"sources":["components/SettingsContext.js","components/useStorageData.js","components/SettingsProvider.js","data/dwarves.js","components/LabelValueDisplay.js","components/Randomizer.js","components/Checkbox.js","components/TextField.js","components/Setup.js","nav/AppTabs.js","nav/github.svg","nav/Nav.js","App.js","index.js","serviceWorker.js"],"names":["React","createContext","useStorageData","localStorageKey","onDataValidate","defaultValue","useState","validatedData","dataString","localStorage","getItem","JSON","stringify","parsedData","parse","console","warn","removeItem","ex","data","setData","onDataUpdate","useCallback","newData","newValue","setItem","error","defaultValues","player1","player2","player3","player4","balancedTeam","randomGuns","randomGrenades","randomOverclocks","SettingsProvider","children","Object","keys","reduce","acc","key","hasOwnProperty","settings","contextValue","useMemo","SettingsContext","Provider","value","dwarves","name","color","primaries","overclocks","secondaries","grenades","useStyles","makeStyles","subheading","marginTop","marginRight","width","LabelValueDisplay","className","label","dense","valueStyle","classes","containerClass","Typography","variant","component","style","pickOne","arr","pluck","max","length","index","Math","floor","random","item","splice","card","margin","maxWidth","content","overflowY","maxHeight","divider","row","display","flexDirection","Randomizer","useContext","players","filter","p","handleClear","handleRandomize","dwarfClone","randomized","map","player","dwarf","primary","secondary","primaryOverclock","secondaryOverclock","grenade","Card","CardHeader","title","CardContent","Fragment","Divider","CardActions","IconButton","onClick","checkbox","marginBottom","Checkbox","handleChange","target","checked","newSettings","FormControlLabel","control","onChange","textField","TextField","fullWidth","Setup","noValidate","autoComplete","theme","appBar","backgroundColor","palette","background","paper","tab","minWidth","invisible","AppTabs","setTab","AppBar","position","elevation","Tabs","_","Tab","drawerPaper","toolbar","paddingLeft","paddingRight","flex","nested","spacing","link","textDecoration","Nav","Toolbar","Tooltip","href","alt","height","src","githubSvg","createMuiTheme","type","App","Component","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sNAEeA,MAAMC,cAAc,I,QCsCpBC,MAtCf,YAA+E,IAAtDC,EAAqD,EAArDA,gBAAiBC,EAAoC,EAApCA,eAAoC,IAApBC,oBAAoB,MAAL,GAAK,IACnCC,oBAAS,WAC5C,IACI,IAEIC,EAFEC,EAAaC,aAAaC,QAAQP,IAAoBQ,KAAKC,UAAUP,GACrEQ,EAAaF,KAAKG,MAAMN,IAAeH,EAE7C,GAAID,GAEA,KADAG,EAAgBH,EAAeS,IAI3B,OAFAE,QAAQC,KAAK,6BAA8BT,GAC3CE,aAAaQ,WAAWd,GACjBE,OAGXE,EAAgBM,EAEpB,OAAON,EACT,MAAOW,GACLH,QAAQC,KAAK,mCAAoCE,GACjDT,aAAaQ,WAAWd,GAE5B,OAAOE,KArB+D,0BACnEc,OADmE,MAC5Dd,EAD4D,EAC9Ce,EAD8C,KAmC1E,MAAO,CAACD,OAAME,aAXOC,uBAAY,SAAAC,GAC7B,IAAMhB,EAAgBH,EAAemB,GACrC,GAAIhB,EAAe,CACfa,EAAQb,GACR,IAAMiB,EAAWb,KAAKC,UAAUW,GAChCd,aAAagB,QAAQtB,EAAiBqB,QAEtCT,QAAQW,MAAM,6CAA8CH,KAEjE,CAACpB,EAAiBC,M,OCLzB,IAAMuB,EAAgB,CAClBC,QAAS,MACTC,QAAS,MACTC,QAAS,QACTC,QAAS,OACTC,cAAc,EACdC,YAAY,EACZC,gBAAgB,EAChBC,kBAAkB,GAEhBhC,EAAkB,eAETiC,EAtCf,YAAuC,IAAZC,EAAW,EAAXA,SACjBjC,EAAiBkB,uBAAY,SAAAH,GAC/B,GAAIA,EACA,OAAOmB,OAAOC,KAAKZ,GACda,QAAO,SAACC,EAAKC,GAGV,OAFIvB,EAAKwB,eAAeD,GAAMD,EAAIC,GAAOvB,EAAKuB,GACzCD,EAAIC,GAAOf,EAAce,GACvBD,IACR,MAEZ,IAV+B,EAYKvC,EAAe,CAACC,kBAAiBC,mBAA3DwC,EAZqB,EAY3BzB,KAAgBE,EAZW,EAYXA,aAEjBwB,EAAeC,mBAAQ,iBAAO,CAChCF,WACAvB,kBACA,CAACA,EAAcuB,IAEnB,OACI,cAACG,EAAgBC,SAAjB,CAA0BC,MAAOJ,EAAjC,SACKR,K,4IC+MEa,EAxOC,CACZ,CACIC,KAAM,UACNC,MAAO,UACPC,UAAW,CACP,CACIF,KAAM,qBACNG,WAAY,CACR,gBACA,kBACA,sBACA,uBACA,cACA,gBAGR,CACIH,KAAM,cACNG,WAAY,CACR,8BACA,yBACA,sBACA,YACA,YACA,cAIZC,YAAa,CACT,CACIJ,KAAM,aACNG,WAAY,CACR,YACA,kBACA,qBACA,iBACA,mBACA,wBAGR,CACIH,KAAM,8BACNG,WAAY,CACR,mBACA,wBACA,YACA,eACA,cACA,uBAIZE,SAAU,CACN,aACA,aACA,uBAGR,CACIL,KAAM,WACNC,MAAO,UACPC,UAAW,CACP,CACIF,KAAM,qBACNG,WAAY,CACR,UACA,yBACA,4BACA,iBACA,gBAGR,CACIH,KAAM,uBACNG,WAAY,CACR,oBACA,qBACA,oBACA,sBACA,aACA,yBAIZC,YAAa,CACT,CACIJ,KAAM,oBACNG,WAAY,CACR,cACA,WACA,iBACA,iBACA,UACA,qBAGR,CACIH,KAAM,gBACNG,WAAY,CACR,qBACA,eACA,0BACA,mBACA,yBACA,iBACA,aAIZE,SAAU,CACN,WACA,iBACA,mBAGR,CACIL,KAAM,SACNC,MAAO,UACPC,UAAW,CACP,CACIF,KAAM,+BACNG,WAAY,CACR,uBACA,qBACA,eACA,yBACA,oBACA,cACA,eAGR,CACIH,KAAM,iCACNG,WAAY,CACR,kBACA,qBACA,gBACA,kBACA,aACA,wBAIZC,YAAa,CACT,CACIJ,KAAM,2BACNG,WAAY,CACR,kBACA,YACA,mBACA,cACA,kBACA,kBAGR,CACIH,KAAM,sBACNG,WAAY,CACR,oBACA,oBACA,eACA,sBACA,mBACA,mBACA,gBAIZE,SAAU,CACN,iBACA,qBACA,oBAGR,CACIL,KAAM,QACNC,MAAO,UACPC,UAAW,CACP,CACIF,KAAM,eACNG,WAAY,CACR,eACA,gBACA,kBACA,+BACA,mBACA,sBACA,wBAGR,CACIH,KAAM,gBACNG,WAAY,CACR,aACA,gBACA,0BACA,UACA,4BACA,0BAIZC,YAAa,CACT,CACIJ,KAAM,wBACNG,WAAY,CACR,iB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","file":"static/js/main.1e9fbd5d.chunk.js","sourcesContent":["import React from 'react'\n\nexport default React.createContext({})\n","import {useCallback, useState} from 'react'\n\nfunction useStorageData({localStorageKey, onDataValidate, defaultValue = {}}) {\n    const [data = defaultValue, setData] = useState(() => {\n        try {\n            const dataString = localStorage.getItem(localStorageKey) || JSON.stringify(defaultValue)\n            const parsedData = JSON.parse(dataString) || defaultValue\n            let validatedData\n            if (onDataValidate) {\n                validatedData = onDataValidate(parsedData)\n                if (!validatedData) {\n                    console.warn('Invalid local storage data', validatedData)\n                    localStorage.removeItem(localStorageKey)\n                    return defaultValue\n                }\n            } else {\n                validatedData = parsedData\n            }\n            return validatedData\n        } catch (ex) {\n            console.warn('Error loading local storage data', ex)\n            localStorage.removeItem(localStorageKey)\n        }\n        return defaultValue\n    })\n\n    const onDataUpdate = useCallback(newData => {\n        const validatedData = onDataValidate(newData)\n        if (validatedData) {\n            setData(validatedData)\n            const newValue = JSON.stringify(newData)\n            localStorage.setItem(localStorageKey, newValue)\n        } else {\n            console.error('Attempt to set invalid local storage value', newData)\n        }\n    }, [localStorageKey, onDataValidate])\n\n    return {data, onDataUpdate}\n}\n\nexport default useStorageData\n","import React, {useCallback, useMemo} from 'react'\nimport SettingsContext from './SettingsContext'\nimport useStorageData from './useStorageData'\n\nfunction SettingsProvider({children}) {\n    const onDataValidate = useCallback(data => {\n        if (data) {\n            return Object.keys(defaultValues)\n                .reduce((acc, key) => {\n                    if (data.hasOwnProperty(key)) acc[key] = data[key]\n                    else acc[key] = defaultValues[key]\n                    return acc\n                }, {})\n        }\n    }, [])\n\n    const {data: settings, onDataUpdate} = useStorageData({localStorageKey, onDataValidate})\n\n    const contextValue = useMemo(() => ({\n        settings,\n        onDataUpdate\n    }), [onDataUpdate, settings])\n\n    return (\n        <SettingsContext.Provider value={contextValue}>\n            {children}\n        </SettingsContext.Provider>\n    )\n}\n\nconst defaultValues = {\n    player1: 'One',\n    player2: 'Two',\n    player3: 'Three',\n    player4: 'Four',\n    balancedTeam: true,\n    randomGuns: true,\n    randomGrenades: true,\n    randomOverclocks: false\n}\nconst localStorageKey = 'DRnGSettings'\n\nexport default SettingsProvider\n","const dwarves = [\n    {\n        name: 'Driller',\n        color: '#dfda3a',\n        primaries: [\n            {\n                name: 'CRSPR Flamethrower',\n                overclocks: [\n                    'Lighter Tanks',\n                    'Sticky Additive',\n                    'Compact Feed Valves',\n                    'Fuel Stream Diffuser',\n                    'Face Melter',\n                    'Sticky Fuel'\n                ]\n            },\n            {\n                name: 'Cryo Cannon',\n                overclocks: [\n                    'Improved Thermal Efficiency',\n                    'Perfectly Tuned Cooler',\n                    'Flow Rate Expansion',\n                    'Ice Spear',\n                    'Ice Storm',\n                    'Snowball'\n                ]\n            }\n        ],\n        secondaries: [\n            {\n                name: 'Subata 120',\n                overclocks: [\n                    'Chain Hit',\n                    'Homebrew Powder',\n                    'Oversized Magazine',\n                    'Automatic Fire',\n                    'Explosive Reload',\n                    'Tranquilizer Rounds'\n                ]\n            },\n            {\n                name: 'Experimental Plasma Charger',\n                overclocks: [\n                    'Energy Rerouting',\n                    'Magnetic Cooling Unit',\n                    'Heat Pipe',\n                    'Heavy Hitter',\n                    'Overcharger',\n                    'Persistent Plasma'\n                ]\n            }\n        ],\n        grenades: [\n            'Impact Axe',\n            'HE Grenade',\n            'Neurotoxin Grenade'\n        ]\n    },\n    {\n        name: 'Engineer',\n        color: '#Fb1a17',\n        primaries: [\n            {\n                name: '\"Warthog\" Auto 210',\n                overclocks: [\n                    'Stunner',\n                    'Light-Weight Magazines',\n                    'Magnetic Pellet Alignment',\n                    'Cycle Overload',\n                    'Mini Shells'\n                ]\n            },\n            {\n                name: '\"Stubby\" Voltaic SMG',\n                overclocks: [\n                    'Super-Slim Rounds',\n                    'Well Oiled Machine',\n                    'EM Refire Booster',\n                    'Light-Weight Rounds',\n                    'Turret Arc',\n                    'Turret EM Discharge'\n                ]\n            }\n        ],\n        secondaries: [\n            {\n                name: 'Deepcore 40mm PGL',\n                overclocks: [\n                    'Clean Sweep',\n                    'Pack Rat',\n                    'Compact Rounds',\n                    'RJ250 Compound',\n                    'Fat Boy',\n                    'Hyper Propellant'\n                ]\n            },\n            {\n                name: 'Breach Cutter',\n                overclocks: [\n                    'Light-Weight Cases',\n                    'Roll Control',\n                    'Stronger Plasma Current',\n                    'Return to Sender',\n                    'High Voltage Crossover',\n                    'Spinning Death',\n                    'Inferno'\n                ]\n            }\n        ],\n        grenades: [\n            'L.U.R.E.',\n            'Plasma Burster',\n            'Proximity Mine'\n        ]\n    },\n    {\n        name: 'Gunner',\n        color: '#3a6b33',\n        primaries: [\n            {\n                name: '\"Lead Storm\" Powered Minigun',\n                overclocks: [\n                    'A Little More Oomph!',\n                    'Thinned Drum Walls',\n                    'Burning Hell',\n                    'Compact Feed Mechanism',\n                    'Exhaust Vectoring',\n                    'Bullet Hell',\n                    'Lead Storm'\n                ]\n            },\n            {\n                name: '\"Thunderhead\" Heavy Autocannon',\n                overclocks: [\n                    'Composite Drums',\n                    'Splintering Shells',\n                    'Carpet Bomber',\n                    'Combat Mobility',\n                    'Big Bertha',\n                    'Neurotoxin Payload'\n                ]\n            }\n        ],\n        secondaries: [\n            {\n                name: '\"Bulldog\" Heavy Revolver',\n                overclocks: [\n                    'Homebrew Powder',\n                    'Chain Hit',\n                    'Volatile Bullets',\n                    'Six Shooter',\n                    'Elephant Rounds',\n                    'Magic Bullets'\n                ]\n            },\n            {\n                name: 'BRT7 Burst Fire Gun',\n                overclocks: [\n                    'Composite Casings',\n                    'Full Chamber Seal',\n                    'Compact Mags',\n                    'Experimental Rounds',\n                    'Electro Minelets',\n                    'Micro Flechettes',\n                    'Lead Spray'\n                ]\n            }\n        ],\n        grenades: [\n            'Sticky Grenade',\n            'Incendiary Grenade',\n            'Cluster Grenade'\n        ]\n    },\n    {\n        name: 'Scout',\n        color: '#235bf4',\n        primaries: [\n            {\n                name: 'Deepcore GK2',\n                overclocks: [\n                    'Compact Ammo',\n                    'Gas Rerouting',\n                    'Homebrew Powder',\n                    'Overclocked Firing Mechanism',\n                    'Bullets of Mercy',\n                    'AI Stability Engine',\n                    'Electrifying Reload'\n                ]\n            },\n            {\n                name: 'M1000 Classic',\n                overclocks: [\n                    'Hoverclock',\n                    'Minimal Clips',\n                    'Active Stability System',\n                    'Hipster',\n                    'Electrocuting Focus Shots',\n                    'Supercooling Chamber'\n                ]\n            }\n        ],\n        secondaries: [\n            {\n                name: 'Jury-Rigged Boomstick',\n                overclocks: [\n                    'Compact Shells',\n                    'Double Barrel',\n                    'Special Powder',\n                    'Stuffed Shells',\n                    'Shaped Shells',\n                    'Jumbo Shells'\n                ]\n            },\n            {\n                name: 'Zhukov NUK17',\n                overclocks: [\n                    'Minimal Magazines',\n                    'Custom Casings',\n                    'Cryo Minelets',\n                    'Embedded Detonators',\n                    'Gas Recycling'\n                ]\n            }\n        ],\n        grenades: [\n            'IFG',\n            'Cryo Grenade',\n            'Pherimone Canister'\n        ]\n    }\n]\nexport default dwarves\n","import {makeStyles} from '@material-ui/styles'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nfunction LabelValueDisplay({className, label, value, children, dense, valueStyle}) {\n    const classes = useStyles()\n    const containerClass = (className || '') + (dense ? '' : ' ' + classes.subheading)\n    return (\n        <div className={containerClass}>\n            <Typography variant='subtitle1' color='textSecondary' component='div'>\n                {label}\n            </Typography>\n            <Typography variant='body2' component='div' style={valueStyle}>\n                {value || children}\n            </Typography>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    subheading: {\n        marginTop: 16,\n        marginRight: 8,\n        width: '100%'\n    }\n})\n\nexport default LabelValueDisplay\n","import React, {useCallback, useContext, useState} from 'react'\nimport {Divider} from '@material-ui/core'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport makeStyles from '@material-ui/styles/makeStyles'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport ShuffleIcon from '@material-ui/icons/ShuffleOutlined'\nimport ClearAllIcon from '@material-ui/icons/ClearAll'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport dwarves from '../data/dwarves'\nimport LabelValueDisplay from './LabelValueDisplay'\nimport SettingsContext from './SettingsContext'\n\nfunction Randomizer() {\n    const classes = useStyles()\n    const [data, setData] = useState(null)\n    const {settings} = useContext(SettingsContext)\n    const {player1, player2, player3, player4, balancedTeam, randomGuns, randomGrenades, randomOverclocks} = settings\n    const players = [player1, player2, player3, player4].filter(p => p)\n\n    const handleClear = useCallback(() => {\n        setData(null)\n    }, [])\n\n    const handleRandomize = useCallback(() => {\n        const dwarfClone = [...dwarves]\n        const randomized = players.map(player => {\n            const dwarf = pickOne(dwarfClone, balancedTeam)\n            const primary = pickOne(dwarf.primaries)\n            const secondary = pickOne(dwarf.secondaries)\n            return {\n                name: player,\n                color: dwarf.color,\n                dwarf: dwarf.name,\n                primary: primary.name,\n                primaryOverclock: pickOne(primary.overclocks),\n                secondary: secondary.name,\n                secondaryOverclock: pickOne(secondary.overclocks),\n                grenade: pickOne(dwarf.grenades)\n            }\n        })\n        setData(randomized)\n    }, [balancedTeam, players])\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title='Randomizer'/>\n            <CardContent className={classes.content}>\n                {!data && <Typography>Click Randomize to begin.</Typography>}\n                {\n                    data &&\n                    data.map((player, index) =>\n                        <React.Fragment key={index}>\n                            <div className={classes.row}>\n                                <LabelValueDisplay label='Player' value={player.name}/>\n                                <LabelValueDisplay\n                                    label='Dwarf'\n                                    value={player.dwarf}\n                                    valueStyle={{color: player.color}}\n                                />\n                            </div>\n                            {\n                                randomGuns &&\n                                <div className={classes.row}>\n                                    <LabelValueDisplay label='Primary'>\n                                        {player.primary}\n                                        {\n                                            randomOverclocks &&\n                                            <React.Fragment>\n                                                <br/>\n                                                {player.primaryOverclock}\n                                            </React.Fragment>\n                                        }\n                                    </LabelValueDisplay>\n                                    <LabelValueDisplay label='Secondary'>\n                                        {player.secondary}\n                                        {\n                                            randomOverclocks &&\n                                            <React.Fragment>\n                                                <br/>\n                                                {player.secondaryOverclock}\n                                            </React.Fragment>\n                                        }\n                                    </LabelValueDisplay>\n                                </div>\n                            }\n                            {\n                                randomGrenades &&\n                                <LabelValueDisplay label='Grenade' value={player.grenade}/>\n                            }\n                            {index < players.length - 1 && <Divider className={classes.divider}/>}\n                        </React.Fragment>\n                    )\n                }\n            </CardContent>\n            <CardActions>\n                <IconButton color='secondary' onClick={handleClear}>\n                    <ClearAllIcon/>\n                </IconButton>\n                <IconButton color='secondary' onClick={handleRandomize}>\n                    <ShuffleIcon/>\n                </IconButton>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst pickOne = (arr, pluck) => {\n    const max = arr.length\n    const index = Math.floor((Math.random() * max) % max)\n    const item = arr[index]\n    if (pluck) arr.splice(index, 1)\n    return item\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 450\n    },\n    content: {\n        overflowY: 'auto',\n        maxHeight: 'calc(100vh - 304px)'\n    },\n    divider: {\n        margin: '16px -16px 8px -16px'\n    },\n    row: {\n        display: 'flex',\n        flexDirection: 'row'\n    }\n})\n\nexport default Randomizer\n","import makeStyles from '@material-ui/styles/makeStyles'\nimport React, {useCallback, useContext} from 'react'\nimport {FormControlLabel} from '@material-ui/core'\nimport MuiCheckbox from '@material-ui/core/Checkbox'\nimport SettingsContext from './SettingsContext'\n\nfunction Checkbox({label, name}) {\n    const classes = useStyles()\n    const {settings, onDataUpdate} = useContext(SettingsContext)\n\n    const handleChange = useCallback(({target}) => {\n        const {name, checked} = target\n        const newSettings = {...settings, [name]: checked}\n        onDataUpdate(newSettings)\n    }, [onDataUpdate, settings])\n\n    return (\n        <FormControlLabel\n            control={\n                <MuiCheckbox\n                    name={name}\n                    checked={settings[name]}\n                    onChange={handleChange}\n                />\n            }\n            label={label}\n            className={classes.checkbox}\n        />\n    )\n}\n\nconst useStyles = makeStyles({\n    checkbox: {\n        marginBottom: -8\n    }\n})\n\nexport default Checkbox\n","import React, {useCallback, useContext} from 'react'\nimport MuiTextField from '@material-ui/core/TextField'\nimport makeStyles from '@material-ui/styles/makeStyles'\nimport SettingsContext from './SettingsContext'\n\nfunction TextField({label, name}) {\n    const classes = useStyles()\n    const {settings, onDataUpdate} = useContext(SettingsContext)\n\n    const handleChange = useCallback(({target}) => {\n        const {name, value} = target\n        const newSettings = {...settings, [name]: value}\n        onDataUpdate(newSettings)\n    }, [onDataUpdate, settings])\n\n    return (\n        <MuiTextField\n            name={name}\n            label={label}\n            value={settings[name]}\n            fullWidth\n            className={classes.textField}\n            onChange={handleChange}\n        />\n    )\n}\n\nconst useStyles = makeStyles({\n    textField: {\n        marginBottom: 16\n    }\n})\n\nexport default TextField\n","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport makeStyles from '@material-ui/styles/makeStyles'\nimport CardContent from '@material-ui/core/CardContent'\nimport Checkbox from './Checkbox'\nimport TextField from './TextField'\n\nfunction Setup() {\n    const classes = useStyles()\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title='Setup'/>\n            <form noValidate autoComplete='off'>\n                <CardContent className={classes.content}>\n                    <TextField name='player1' label='Player 1 Name'/>\n                    <TextField name='player2' label='Player 2 Name'/>\n                    <TextField name='player3' label='Player 3 Name'/>\n                    <TextField name='player4' label='Player 4 Name'/>\n\n                    <Checkbox name='balancedTeam' label='Balanced Team'/>\n                    <Checkbox name='randomGuns' label='Random Guns'/>\n                    <Checkbox name='randomGrenades' label='Random Grenades'/>\n                    <Checkbox name='randomOverclocks' label='Random Overclocks'/>\n                </CardContent>\n            </form>\n        </Card>\n    )\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 450\n    },\n    content: {\n        marginTop: -16,\n        marginBottom: -16,\n        display: 'flex',\n        flexDirection: 'column'\n    }\n})\n\nexport default Setup\n","import React, {useState} from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport AppBar from '@material-ui/core/AppBar'\nimport Randomizer from '../components/Randomizer'\nimport Setup from '../components/Setup'\nimport makeStyles from '@material-ui/styles/makeStyles'\n\nfunction AppTabs() {\n    const classes = useStyles()\n    const [tab, setTab] = useState(0)\n    const handleTabChange = (_, newValue) => setTab(newValue)\n\n    return (\n        <React.Fragment>\n            <AppBar position='static' elevation={0} className={classes.appBar}>\n                <Tabs\n                    value={tab}\n                    onChange={handleTabChange}\n                >\n                    <Tab label='Randomizer' className={classes.tab}/>\n                    <Tab label='Setup' className={classes.tab}/>\n                </Tabs>\n            </AppBar>\n            <div className={tab !== 0 ? classes.invisible : ''}>\n                <Randomizer/>\n            </div>\n            <div className={tab !== 1 ? classes.invisible : ''}>\n                <Setup/>\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        backgroundColor: theme.palette.background.paper\n    },\n    tab: {\n        backgroundColor: theme.palette.background.paper,\n        minWidth: 125\n    },\n    invisible: {\n        display: 'none'\n    }\n}))\n\nexport default AppTabs\n","export default __webpack_public_path__ + \"static/media/github.abfa92f7.svg\";","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport githubSvg from './github.svg'\nimport makeStyles from '@material-ui/styles/makeStyles'\n\nfunction Nav() {\n    const classes = useStyles()\n    return (\n        <React.Fragment>\n            <AppBar position='static' elevation={0} className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    {/* Title bar */}\n                    <Typography variant='h6' className={classes.title}>\n                        Deep Random Galactic\n                    </Typography>\n\n                    {/* Top right icons */}\n                    <Tooltip title='Contribute on GitHub!'>\n                        <IconButton target='_blank' href='https://github.com/NiXXeD/deeprandomgalactic'>\n                            <img alt='github link' width='24' height='24' src={githubSvg}/>\n                        </IconButton>\n                    </Tooltip>\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        backgroundColor: theme.palette.background.paper\n    },\n    drawerPaper: {\n        width: 225\n    },\n    toolbar: {\n        paddingLeft: 8,\n        paddingRight: 8\n    },\n    title: {\n        paddingLeft: 12,\n        flex: 1\n    },\n    nested: {\n        paddingLeft: theme.spacing(4)\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit'\n    }\n}))\n\nexport default Nav\n","import React from 'react'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\nimport ThemeProvider from '@material-ui/styles/ThemeProvider'\nimport SettingsProvider from './components/SettingsProvider'\nimport AppTabs from './nav/AppTabs'\nimport Nav from './nav/Nav'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark'\n    }\n})\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <SettingsProvider>\n                <div>\n                    <Nav/>\n\n                    <AppTabs/>\n                </div>\n            </SettingsProvider>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\nfunction render(Component) {\n    ReactDOM.render(<Component/>, document.getElementById('root'))\n}\n\nrender(App)\n\nif (module.hot) {\n    module.hot.accept('./App', () => {\n        const next = require('./App').default\n        render(next)\n    })\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready\n                    .then(() => {\n                        console.log(\n                            'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                        )\n                    })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister()\n                        .then(() => {\n                            window.location.reload()\n                        })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => registration.unregister())\n    }\n}\n"],"sourceRoot":""}